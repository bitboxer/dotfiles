---
- name: Install the required packages
  hosts: all
  vars:
    user_name: "Bodo Tasche"
    email: "bodo@wannawork.de"
    url: "https://bitboxer.de"
    ruby_version: 2.5.1
    rust_version: 1.24.0
    elixir_version: 1.6.4
    erlang_version: 20.3
    node_version: 8.11.1
    terraform_version: 0.11.7
    go_version: "1.10"
    neovim_version: 0.2.2
    phantom_version: 2.1.1
    tmux_version: 2.6
    apt_keys:
      - 'https://download.docker.com/linux/ubuntu/gpg'
    apt_repositories:
      - 'deb [arch=amd64] https://download.docker.com/linux/ubuntu artful stable'
      - 'ppa:git-core/ppa'
    apt_packages:
      - build-essential
      - curl
      - docker-ce
      - git
      - git-crypt
      - htop
      - jq
      - tig
      - libevent-dev
      - tree
      - wget
      - youtube-dl
      - zsh
      - libtool
      - libtool-bin
      - autoconf
      - automake
      - cmake
      - libncurses5-dev
      - g++
      - pkg-config
      - unzip
      - software-properties-common
      - python-pip
      - python3-pip
      - xorg
      - xsel
      - exuberant-ctags
      - ffmpeg
      - inotify-tools
      - meld
      - grc
      - gnupg2
      - gnupg-agent
      - pwgen
      - httpie
    npm_packages:
      - bower
      - gulp
      - yarn
      - jscs
      - jshint
      - alex
      - markdownlint-cli
      - jwtgen
      - tldr
    ruby_gems:
      - awesome_print
      - bundler
      - manpages
      - mdless
      - pry
      - tmuxinator
      - neovim
      - github_changelog_generator
    cargo_packages:
      - cargo-outdated
      - rustfmt
      - ripgrep
    go_packages:
      - github/hub
      - realestate-com-au/shush
      - simeji/jid/cmd/jid
    marks:
      c: /home/vagrant/code
      d: /home/vagrant/Downloads
    spell_files:
      - en.utf-8.spl
      - en.utf-8.sug
      - de.utf-8.spl
      - de.utf-8.sug
  tasks:
    - name: Update permission on persistant storage
      command: chown vagrant:vagrant /home/vagrant/persistant
      become: true
    - name: Add vm to hosts file
      command: bash -c "echo \"127.0.0.1 vm\" >> /etc/hosts"
      become: true
    - name: Symlink code directory
      command: ln -s /home/vagrant/persistant/code /home/vagrant/code
    - shell: ls -1 /vagrant/tilde
      register: dotfiles
    - name: Link Dotfiles
      file: path=/home/vagrant/.{{ item }} src=/vagrant/tilde/{{ item }} owner=vagrant group=vagrant state=link
      with_items: "{{ dotfiles.stdout_lines }}"
    - name: Add APT Keys
      apt_key: url="{{ item }}"
      with_items: "{{ apt_keys }}"
      become: true
    - name: Add APT Repositories
      apt_repository: repo="{{ item }}" state=present
      with_items: "{{ apt_repositories }}"
      become: true
    - apt: name=aptitude
      become: true
    - name: Update cache and upgrade
      apt: update_cache=yes upgrade=safe
      become: true
    - name: Install missing packages
      apt: name={{ item }}
      with_items: "{{ apt_packages }}"
      become: true

    - name: replace gpg-agent config
      command: bash -c "echo \"default-cache-ttl 21600\\nmax-cache-ttl 259200\" > ~/.gnupg/gpg-agent.conf"

    - name: Install oh-my-zsh
      git: repo=https://github.com/robbyrussell/oh-my-zsh.git dest=/home/vagrant/.oh-my-zsh
    - name: Install zsh-syntax-highlighting
      git: repo=https://github.com/zsh-users/zsh-syntax-highlighting.git dest=/home/vagrant/.zsh-syntax-highlighting/

    - name: Install antibody
      command: bash -c "curl -sL https://git.io/antibody | bash -s"

    - name: Start docker on boot
      systemd: name=docker enabled=yes
    - name: Make sure the docker group exists
      group:
        name: docker
        state: present
      become: true
    - name: Add the vagrant user to the docker group
      user:
        name: vagrant
        groups: docker
        append: yes
      become: true
    - name: install docker-compose
      command: bash -c "/vagrant/tilde/bin/update_docker_compose"
      become: true

    - name: Set the timezone
      command: timedatectl set-timezone Europe/Berlin
      become: true

    - name: Set default shell for Vagrant user
      user: name=vagrant shell=/bin/zsh
      become: true

    - name: Create the marks directory
      file: path=/home/vagrant/.marks state=directory
    - name: Configure the marks
      file: path=/home/vagrant/.marks/{{ item.key }} state=link src={{ item.value }} force=yes
      with_dict: "{{ marks }}"

    - name: Install asdf
      warn: false
      shell: |
        rm -rf ~/.asdf || true
        git clone https://github.com/asdf-vm/asdf.git ~/.asdf
        cd ~/.asdf
        git checkout tags/v0.4.3
    - name: Install asdf plugins
      shell: |
        ~/.asdf/bin/asdf plugin-add erlang http://github.com/asdf-vm/asdf-erlang
        ~/.asdf/bin/asdf plugin-add elixir http://github.com/asdf-vm/asdf-elixir
        ~/.asdf/bin/asdf plugin-add ruby http://github.com/asdf-vm/asdf-ruby
        ~/.asdf/bin/asdf plugin-add node http://github.com/asdf-vm/asdf-nodejs
        ~/.asdf/bin/asdf plugin-add go http://github.com/kennyp/asdf-golang
        ~/.asdf/bin/asdf plugin-add rust http://github.com/code-lever/asdf-rust
        ~/.asdf/bin/asdf plugin-add terraform https://github.com/Banno/asdf-hashicorp

    - name: Install erlang
      command: ~/.asdf/bin/asdf install erlang {{ erlang_version }}
    - name: Install elixir
      command: ~/.asdf/bin/asdf install elixir {{ elixir_version }}
    - name: Install ruby
      command: ~/.asdf/bin/asdf install ruby {{ ruby_version }}
    - name: Install node
      command: ~/.asdf/bin/asdf install node {{ node_version }}
    - name: Install go
      command: ~/.asdf/bin/asdf install go {{ go_version }}
    - name: Install rust
      command: ~/.asdf/bin/asdf install rust {{ rust_version }}
    - name: Install terraform
      command: ~/.asdf/bin/asdf install terraform {{ terraform_version }}
    - name: store versions
      shell: |
        echo erlang {{ erlang_version }} >> ~/.tool-versions
        echo elixir {{ elixir_version }} >> ~/.tool-versions
        echo ruby {{ ruby_version }} >> ~/.tool-versions
        echo node {{ node_version }} >> ~/.tool-versions
        echo go {{ go_version }} >> ~/.tool-versions
        echo rust {{ rust_version }} >> ~/.tool-versions
        echo terraform {{ terraform_version }} >> ~/.tool-versions

    - name: Install default Ruby gems
      command: /bin/zsh -c 'source /home/vagrant/.asdf/asdf.sh && gem install {{ item }}'
      with_items: "{{ ruby_gems }}"

    - name: Install default NPM packages
      command: /bin/zsh -c 'source /home/vagrant/.asdf/asdf.sh && npm install -g {{ item }}'
      with_items: "{{ npm_packages }}"

    - command: /bin/zsh -c 'source /home/vagrant/.asdf/asdf.sh && npm set init-author-name "{{ user_name }}"'
    - command: /bin/zsh -c 'source /home/vagrant/.asdf/asdf.sh && npm set init-author-email"{{ email }}"'
    - command: /bin/zsh -c 'source /home/vagrant/.asdf/asdf.sh && npm set init-author-url "{{ url }}"'

    - name: Install Cargo packages
      command: /bin/zsh -c 'source /home/vagrant/.asdf/asdf.sh && cargo install --verbose --force {{ item }}'
      with_items: "{{ cargo_packages }}"

    - name: Install go packages
      command: /bin/zsh -c 'source /home/vagrant/.asdf/asdf.sh && go get github.com/{{ item }}'
      with_items: "{{ go_packages }}"

    - name: Download phantomjs
      get_url: url=https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-{{ phantom_version }}-linux-x86_64.tar.bz2 dest=/tmp/phantomjs.tar.bz2
      become: true
    - name: Unarchive phantomjs
      unarchive: src=/tmp/phantomjs.tar.bz2 dest=/tmp copy=false
      become: true
    - name: Move phantomjs
      command: cp /tmp/phantomjs-{{ phantom_version }}-linux-x86_64/bin/phantomjs /usr/local/bin/phantomjs
      become: true

    - name: Download NeoVim
      get_url: >
        url=https://github.com/neovim/neovim/archive/v{{ neovim_version }}.tar.gz
        dest=/tmp/neovim-{{ neovim_version }}.tar.gz
    - name: Uncompress NeoVim archive
      unarchive: >
        src=/tmp/neovim-{{ neovim_version }}.tar.gz
        dest=/tmp
        copy=no
    - name: Install NeoVim
      command: bash -c "CMAKE_BUILD_TYPE=RelWithDebInfo make && sudo make install"
      args:
        chdir: /tmp/neovim-{{ neovim_version }}
    - name: Install vimplug
      git: repo=https://github.com/junegunn/vim-plug.git dest=/home/vagrant/.vimplug
    - name: Linking vimplug
      command: bash -c "mkdir -p ~/.config/nvim/autoload/ && cp -f $HOME/.vimplug/plug.vim $HOME/.config/nvim/autoload/plug.vim"
    - name: Install neovim python2 binding
      command: pip install neovim
      become: true
    - name: Install neovim python3 binding
      command: pip3 install neovim
      become: true
    - name: Install neovim packages
      command: nvim +PlugInstall +UpdateRemotePlugin +qa

    - name: Download fzf
      git: repo=https://github.com/junegunn/fzf.git dest=/home/vagrant/.fzf
    - name: Install fzf
      command: /bin/zsh -c 'source /home/vagrant/.asdf/asdf.sh && /home/vagrant/.fzf/install --bin'

    - name: Download tmux
      get_url: >
        url=https://github.com/tmux/tmux/releases/download/{{ tmux_version }}/tmux-{{ tmux_version }}.tar.gz
        dest=/tmp/tmux.tar.gz
      become: true
    - name: Unarchive tmux
      unarchive: src=/tmp/tmux.tar.gz dest=/tmp copy=false
      become: true
    - name: Install tmux
      command: bash -c "cd /tmp/tmux-{{ tmux_version }} && ./configure && make && make install"
      become: true

    - name: Download tmux-yank
      git: repo=https://github.com/tmux-plugins/tmux-yank.git dest=/home/vagrant/.tmux-yank

    - name: install awscli
      command: pip install awscli --user

    - name: Mark the box as vagrant box to check in shell scripts
      become: true
      file: path=/etc/is_vagrant_vm state=touch owner=root group=sys mode=0777
